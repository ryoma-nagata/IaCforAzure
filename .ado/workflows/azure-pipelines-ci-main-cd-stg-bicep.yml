name: ci-main-cd-stg

trigger:
  # none
  branches:
    include:
      - 'main'
      - 'release/*'

  paths:
    include:
      - infra/*
      - code/*

# pr: # PRトリガーはAzure Reposの場合、branch policyで実装します。https://docs.microsoft.com/ja-jp/azure/devops/pipelines/repos/azure-repos-git?view=azure-devops&tabs=yaml#pr-triggers
  # branches:
  #   include:
  #     - 'main'
  #     - 'release/*'
  # paths:
  #   include:
  #     - infra/*
  #     - code/*
  #     - .ado/workflows/azure-pipelines-ci-qa-bicep.yml
variables:
  - name: AZURE_RESOURCE_MANAGER_CONNECTION_NAME
    value: "azure-devops-service-connection" # Update to '{yourResourceManagerConnectionName}'
  - name: AZURE_LOCATION
    value: "" # Update to '{yourLocationName}'
  - name: AZURE_SUBSCRIPTION_ID
    value: "" # Update to '{yourAZURE_SUBSCRIPTION_ID}'
  - name: RESOURCE_GROUP_NAME
    value: "" # Update to '{yourRESOURCE_GROUP_NAME}'

stages:
  - stage: CI
    displayName: "Build ARM Templates"
    jobs:
      - job: Build
        displayName: "Validation and Build"
        continueOnError: false
        pool:
          vmImage: "ubuntu-latest"

        steps:
          # Checkout code
          - checkout: self
            name: checkout_repository
            displayName: Checkout repository
            submodules: true
            lfs: false
            clean: true
            continueOnError: false
            enabled: true


          # - script: |
          #     echo "PR from "$(System.PullRequest.SourceBranch)
          #     if [[ $(System.PullRequest.SourceBranch) == "refs/heads/feature"* ]]
          #     then
          #         echo "check ok"
          #     else
          #         echo 'Please PR to correct branch'
          #         exit 1
          #     fi
          #   displayName: 'Check source branch'
          
          # # Generate Password
          # - task: PowerShell@2
          #   name: generate_password_001
          #   displayName: Generate Password
          #   enabled: true
          #   continueOnError: false
          #   inputs:
          #     targetType: 'filePath'
          #     filePath: '$(System.DefaultWorkingDirectory)/code/GeneratePassword.ps1'
          #     errorActionPreference: 'stop'
          #     failOnStderr: false
          #     ignoreLASTEXITCODE: false
          #     pwsh: true
          
          # building bicep into ARM
          - task: AzureCLI@2  
            displayName: 'Build bicep artifact' 
            inputs: 
              azureSubscription: $(AZURE_RESOURCE_MANAGER_CONNECTION_NAME)
              scriptType: 'pscore'  
              scriptLocation: 'inlineScript'  
              inlineScript: |
                $file = "$(System.DefaultWorkingDirectory)/infra/main.bicep"            
                New-Item -ItemType Directory -Force -Path $(System.DefaultWorkingDirectory)/infra
                az bicep build --file $file --outdir $(System.DefaultWorkingDirectory)/infra

          # # サブスクリプションスコープの場合
          # # Deploy  - what-if
          # - task: AzureCLI@2
          #   name: ARM_whatif
          #   displayName: Deploy ARM - what-if
          #   enabled: true
          #   continueOnError: false
          #   inputs:
          #     azureSubscription: $(AZURE_RESOURCE_MANAGER_CONNECTION_NAME)
          #     scriptType: pscore
          #     scriptLocation: inlineScript
          #     inlineScript: |
          #       az account set `
          #         --subscription $(AZURE_SUBSCRIPTION_ID)
                
          #       az deployment sub what-if `
          #         --location $(AZURE_LOCATION) `
          #         --subscription $(AZURE_SUBSCRIPTION_ID) `
          #         --exclude-change-types Ignore NoChange Unsupported `
          #         --template-file "$(System.DefaultWorkingDirectory)/infra/main.json" `
          #         --parameters "$(System.DefaultWorkingDirectory)/infra/params_stg.json" `
          #         --result-format "FullResourcePayloads"
          #     powerShellErrorActionPreference: "stop"
          #     addSpnToEnvironment: false
          #     useGlobalConfig: false
          #     failOnStandardError: false
          #     powerShellIgnoreLASTEXITCODE: false

          # リソースグループスコープの場合  
          # Deploy - what-if
          - task: AzureCLI@2
            name: ARM_whatif
            displayName: Deploy ARM - what-if
            enabled: true
            continueOnError: false
            inputs:
              azureSubscription: $(AZURE_RESOURCE_MANAGER_CONNECTION_NAME)
              scriptType: pscore
              scriptLocation: inlineScript
              inlineScript: |
                az account set `
                  --subscription $(AZURE_SUBSCRIPTION_ID)
                
                az deployment group what-if `
                  --resource-group $(RESOURCE_GROUP_NAME) `
                  --subscription $(AZURE_SUBSCRIPTION_ID) `
                  --exclude-change-types Ignore NoChange Unsupported `
                  --template-file "$(System.DefaultWorkingDirectory)/infra/main.json" `
                  --parameters "$(System.DefaultWorkingDirectory)/infra/params_stg.json" `
                  --result-format "FullResourcePayloads"

          - task: CopyFiles@2
            displayName: 'Copy jsons'
            inputs:
              contents: '$(System.DefaultWorkingDirectory)/infra/**.json' 
              targetFolder: '$(Build.ArtifactStagingDirectory)'

          - publish: '$(Build.ArtifactStagingDirectory)/infra'
            displayName: 'Publish ARMtemplate'
            artifact: 'infra'

  - stage: CD
    displayName: "Deployment of IaC templates"
    dependsOn: CI
    # condition: and(succeeded(), in(variables['Build.Reason'], 'IndividualCI', 'BatchedCI'))
    jobs:
    - deployment: Deploy_STG
      displayName: "Deployment of IaC templates"
      continueOnError: false
      pool:
        vmImage: "windows-latest"
      environment: STG
      strategy:
        runOnce:
          deploy:
            steps:
              # Download Artifact

              # - task: DownloadPipelineArtifact@2 #downloading artifacts created in build stage
              #   inputs:
              #     source: 'current'
              #     path: '$(Pipeline.Workspace)'
              # - download: current
              #   artifact: infra
      
              # # サブスクリプションスコープの場合    
              # # Deploy ARM
              # - task: AzureResourceManagerTemplateDeployment@3
              #   name: ARM_deployment
              #   displayName: ARM Deployment
              #   enabled: true
              #   continueOnError: false
              #   inputs:
              #     deploymentScope: "Subscription"
              #     azureResourceManagerConnection: $(AZURE_RESOURCE_MANAGER_CONNECTION_NAME)
              #     subscriptionId: $(AZURE_SUBSCRIPTION_ID)
              #     location: $(AZURE_LOCATION)
              #     templateLocation: "Linked artifact"
              #     csmFile: "$(Pipeline.Workspace)/infra/main.json"
              #     csmParametersFile: "$(Pipeline.Workspace)/infra/params_stg.json"
              #     deploymentMode: "Incremental"
              #     deploymentOutputs: 'armOutputs'
              # overrideParameters: >
              #   -administratorPassword "$(password)"
              
              # リソースグループスコープの場合
              # Deploy ARM 
              - task: AzureResourceManagerTemplateDeployment@3
                name: ARM_deployment
                displayName: ARM Deployment
                enabled: true
                continueOnError: false
                inputs:
                  deploymentScope: "ResouceGroup"
                  ConnectedServiceName: $(AZURE_RESOURCE_MANAGER_CONNECTION_NAME)
                  subscriptionId: $(AZURE_SUBSCRIPTION_ID) 
                  resourceGroupName: $(RESOURCE_GROUP_NAME)
                  location: $(AZURE_LOCATION)
                  templateLocation: "Linked artifact"
                  csmFile: "$(Pipeline.Workspace)/infra/main.json"
                  csmParametersFile: "$(Pipeline.Workspace)/infra/params_stg.json"
                  deploymentMode: "Incremental"
                  deploymentOutputs: 'armOutputs'
              # overrideParameters: >
              #   -administratorPassword "$(password)"
              
              - script: echo $(armOutputs)
                displayName: 'Log armOutputs'

